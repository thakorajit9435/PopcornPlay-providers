"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=void 0;const getStream=_a=>__awaiter(void 0,[_a],void 0,function*({link:link,signal:signal,providerContext:providerContext}){var _b;try{let newLink=link;if(link.includes("linkstore")){const res=yield fetch(link,{signal:signal,headers:{accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","accept-language":"en-US,en;q=0.9,en-IN;q=0.8","cache-control":"no-cache",pragma:"no-cache",priority:"u=0, i","sec-ch-ua":'"Microsoft Edge";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":'"Windows"',"sec-fetch-dest":"document","sec-fetch-mode":"navigate","sec-fetch-site":"none","sec-fetch-user":"?1","upgrade-insecure-requests":"1",cookie:"PHPSESSID=9o57cff841dqtv8djtn1rp1712; ext_name=ojplmecpdpgccookcobabopnaifgidhf"}}),refreshMetaMatch=(yield res.text()).match(/<meta\s+http-equiv="refresh"\s+content="[^"]*url=([^"]+)"/i);refreshMetaMatch&&refreshMetaMatch[1]&&(link=refreshMetaMatch[1])}if(link.includes("luxedrive")){const res=yield providerContext.axios.get(link,{signal:signal}),$=providerContext.cheerio.load(res.data),hubcloudLink=$("a.btn.hubcloud").attr("href");if(hubcloudLink)newLink=hubcloudLink;else{const gdFlixLink=$("a.btn.gdflix").attr("href");gdFlixLink&&(newLink=gdFlixLink)}}if(newLink.includes("flix")){return yield providerContext.extractors.gdFlixExtracter(newLink,signal)}const res2=yield providerContext.axios.get(newLink,{signal:signal}),hcLink=(null===(_b=res2.data.match(/location\.replace\('([^']+)'/))||void 0===_b?void 0:_b[1])||newLink;return yield providerContext.extractors.hubcloudExtracter(hcLink.includes("https://hubcloud")?hcLink:newLink,signal)}catch(err){return[]}});exports.getStream=getStream;