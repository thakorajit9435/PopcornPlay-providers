"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getMeta=void 0;const getMeta=function(_a){return __awaiter(this,arguments,void 0,function*({link:id,providerContext:providerContext}){try{const{axios:axios,getBaseUrl:getBaseUrl}=providerContext,url=`${yield getBaseUrl("consumet")}/movies/flixhq/info?id=`+id,data=(yield axios.get(url)).data,meta={title:data.title,synopsis:data.description.replace(/<[^>]*>?/gm,"").trim(),image:data.cover,cast:data.casts,rating:data.rating,tags:[null==data?void 0:data.type,null==data?void 0:data.duration,data.releaseDate.split("-")[0]],imdbId:"",type:data.episodes.length>1?"series":"movie"},links=[];return data.episodes.forEach(episode=>{const title=(null==episode?void 0:episode.number)?"Season-"+(null==episode?void 0:episode.season)+" Ep-"+episode.number:episode.title,link=episode.id+"*"+data.id;link&&title&&links.push({title:title,link:link})}),Object.assign(Object.assign({},meta),{linkList:[{title:meta.title,directLinks:links}]})}catch(err){return{title:"",synopsis:"",image:"",imdbId:"",type:"movie",linkList:[]}}})};exports.getMeta=getMeta;