"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getMeta=void 0;const getMeta=function(_a){return __awaiter(this,arguments,void 0,function*({link:link,providerContext:providerContext}){var _b,_c;try{const{axios:axios}=providerContext,data=(yield axios.get(link)).data,meta={title:data.title,synopsis:data.description,image:data.thumbnail,tags:[null===(_b=null==data?void 0:data.releaseDate)||void 0===_b?void 0:_b.split("-")[0],null==data?void 0:data.status,null==data?void 0:data.type],imdbId:"",type:data.episodesCount>1?"series":"movie"},linkList=[],subLinks=[];return null===(_c=null==data?void 0:data.episodes)||void 0===_c||_c.reverse().map(episode=>{var _a;const title="Episode "+(null==episode?void 0:episode.number),link=null===(_a=null==episode?void 0:episode.id)||void 0===_a?void 0:_a.toString();link&&title&&subLinks.push({title:title,link:link})}),linkList.push({title:meta.title,directLinks:subLinks}),Object.assign(Object.assign({},meta),{linkList:linkList})}catch(err){return{title:"",synopsis:"",image:"",imdbId:"",type:"movie",linkList:[]}}})};exports.getMeta=getMeta;